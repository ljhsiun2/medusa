.global s_prepare_buffers
s_prepare_buffers:
ret

    .global s_faulty_load
s_faulty_load:
push %r12
push %r13
push %r8
push %r9
push %rbp
push %rbx
push %rcx

// Store
lea addresses_UC+0xcfa2, %r13
nop
nop
and $18570, %r12
mov $0x5152535455565758, %r8
movq %r8, (%r13)
nop
inc %rbp

// Store
lea addresses_normal+0x12272, %r12
nop
and $52990, %rbp
mov $0x5152535455565758, %rbx
movq %rbx, %xmm1
movups %xmm1, (%r12)
nop
nop
nop
inc %r8

// Store
lea addresses_D+0x176f2, %r9
nop
nop
nop
nop
nop
sub %rcx, %rcx
movw $0x5152, (%r9)
nop
nop
xor %r13, %r13

// Store
lea addresses_WT+0xaa72, %rbx
nop
nop
nop
nop
nop
xor $62344, %rbp
mov $0x5152535455565758, %r13
movq %r13, (%rbx)
nop
nop
xor %rbx, %rbx

// Faulty Load
lea addresses_RW+0x13a72, %r8
xor %r13, %r13
mov (%r8), %ebp
lea oracles, %rcx
and $0xff, %rbp
shlq $12, %rbp
mov (%rcx,%rbp,1), %rbp
pop %rcx
pop %rbx
pop %rbp
pop %r9
pop %r8
pop %r13
pop %r12
ret

/*
<gen_faulty_load>
[REF]
{'src': {'NT': False, 'AVXalign': False, 'size': 32, 'congruent': 0, 'same': False, 'type': 'addresses_RW'}, 'OP': 'LOAD'}
{'dst': {'NT': False, 'AVXalign': False, 'size': 8, 'congruent': 4, 'same': False, 'type': 'addresses_UC'}, 'OP': 'STOR'}
{'dst': {'NT': False, 'AVXalign': False, 'size': 16, 'congruent': 11, 'same': False, 'type': 'addresses_normal'}, 'OP': 'STOR'}
{'dst': {'NT': False, 'AVXalign': True, 'size': 2, 'congruent': 6, 'same': False, 'type': 'addresses_D'}, 'OP': 'STOR'}
{'dst': {'NT': False, 'AVXalign': False, 'size': 8, 'congruent': 8, 'same': False, 'type': 'addresses_WT'}, 'OP': 'STOR'}
[Faulty Load]
{'src': {'NT': False, 'AVXalign': True, 'size': 4, 'congruent': 0, 'same': True, 'type': 'addresses_RW'}, 'OP': 'LOAD'}
<gen_prepare_buffer>
{'32': 21829}

*/
