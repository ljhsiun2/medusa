.global s_prepare_buffers
s_prepare_buffers:
push %rbp
push %rbx
push %rcx
push %rdi
lea addresses_D_ht+0x1cdf1, %rbp
and $39511, %rdi
movw $0x6162, (%rbp)
nop
nop
nop
inc %rbx
pop %rdi
pop %rcx
pop %rbx
pop %rbp
ret

    .global s_faulty_load
s_faulty_load:
push %r10
push %r13
push %r14
push %r9
push %rax
push %rdi
push %rsi

// Store
lea addresses_A+0x1298d, %rsi
nop
add %rax, %rax
movb $0x51, (%rsi)
nop
nop
nop
nop
sub $6643, %rsi

// Load
lea addresses_WC+0x1030d, %r9
nop
nop
nop
inc %r14
mov (%r9), %r10w
cmp %rax, %rax

// Store
lea addresses_D+0x51ad, %r10
clflush (%r10)
nop
nop
nop
nop
nop
cmp %rax, %rax
movl $0x51525354, (%r10)
nop
nop
sub $55250, %r9

// Store
lea addresses_WT+0x16e87, %r14
nop
nop
nop
nop
xor %r13, %r13
movw $0x5152, (%r14)
nop
nop
nop
nop
nop
sub $27422, %r10

// Faulty Load
lea addresses_RW+0x14d8d, %rdi
nop
xor $32040, %rsi
mov (%rdi), %r10w
lea oracles, %rsi
and $0xff, %r10
shlq $12, %r10
mov (%rsi,%r10,1), %r10
pop %rsi
pop %rdi
pop %rax
pop %r9
pop %r14
pop %r13
pop %r10
ret

/*
<gen_faulty_load>
[REF]
{'OP': 'LOAD', 'src': {'type': 'addresses_RW', 'size': 16, 'AVXalign': False, 'NT': False, 'congruent': 0, 'same': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_A', 'size': 1, 'AVXalign': False, 'NT': False, 'congruent': 7, 'same': False}}
{'OP': 'LOAD', 'src': {'type': 'addresses_WC', 'size': 2, 'AVXalign': False, 'NT': True, 'congruent': 6, 'same': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_D', 'size': 4, 'AVXalign': False, 'NT': False, 'congruent': 5, 'same': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_WT', 'size': 2, 'AVXalign': False, 'NT': False, 'congruent': 1, 'same': False}}
[Faulty Load]
{'OP': 'LOAD', 'src': {'type': 'addresses_RW', 'size': 2, 'AVXalign': False, 'NT': True, 'congruent': 0, 'same': True}}
<gen_prepare_buffer>
{'OP': 'STOR', 'dst': {'type': 'addresses_D_ht', 'size': 2, 'AVXalign': True, 'NT': False, 'congruent': 1, 'same': False}}
{'32': 18723}

*/
