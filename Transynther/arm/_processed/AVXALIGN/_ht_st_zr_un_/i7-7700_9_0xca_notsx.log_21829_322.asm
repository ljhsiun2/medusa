.global s_prepare_buffers
s_prepare_buffers:
push %r15
push %r8
push %rcx
push %rdi
push %rsi
lea addresses_D_ht+0x1e756, %rsi
lea addresses_normal_ht+0x1c83e, %rdi
clflush (%rdi)
nop
nop
nop
nop
add %r8, %r8
mov $53, %rcx
rep movsw
nop
nop
and $17609, %r15
pop %rsi
pop %rdi
pop %rcx
pop %r8
pop %r15
ret

    .global s_faulty_load
s_faulty_load:
push %r13
push %r14
push %rbx
push %rcx
push %rdi
push %rdx
push %rsi

// REPMOV
lea addresses_RW+0xa7e, %rsi
lea addresses_A+0x25be, %rdi
nop
nop
nop
nop
add %r13, %r13
mov $37, %rcx
rep movsb
nop
nop
and $45248, %r13

// Faulty Load
lea addresses_RW+0x1b43e, %rsi
nop
nop
nop
xor $33184, %rdx
movntdqa (%rsi), %xmm7
vpextrq $1, %xmm7, %r14
lea oracles, %rdx
and $0xff, %r14
shlq $12, %r14
mov (%rdx,%r14,1), %r14
pop %rsi
pop %rdx
pop %rdi
pop %rcx
pop %rbx
pop %r14
pop %r13
ret

/*
<gen_faulty_load>
[REF]
{'src': {'NT': False, 'AVXalign': False, 'size': 32, 'congruent': 0, 'same': False, 'type': 'addresses_RW'}, 'OP': 'LOAD'}
{'src': {'congruent': 3, 'same': False, 'type': 'addresses_RW'}, 'dst': {'congruent': 7, 'same': False, 'type': 'addresses_A'}, 'OP': 'REPM'}
[Faulty Load]
{'src': {'NT': True, 'AVXalign': False, 'size': 16, 'congruent': 0, 'same': True, 'type': 'addresses_RW'}, 'OP': 'LOAD'}
<gen_prepare_buffer>
{'src': {'congruent': 2, 'same': False, 'type': 'addresses_D_ht'}, 'dst': {'congruent': 10, 'same': False, 'type': 'addresses_normal_ht'}, 'OP': 'REPM'}
{'00': 352, '32': 20940, '46': 536, '17': 1}

*/
