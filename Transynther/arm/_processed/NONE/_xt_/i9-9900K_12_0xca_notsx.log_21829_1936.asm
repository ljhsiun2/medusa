.global s_prepare_buffers
s_prepare_buffers:
push %r11
push %r14
push %rax
push %rcx
push %rdi
push %rsi
lea addresses_normal_ht+0x10e09, %rsi
lea addresses_A_ht+0x7dbb, %rdi
nop
nop
nop
nop
nop
and $64234, %r11
mov $119, %rcx
rep movsl
nop
cmp $52019, %rax
lea addresses_normal_ht+0x1c5a3, %r14
nop
nop
nop
nop
add %rdi, %rdi
mov (%r14), %rcx
nop
nop
nop
cmp $37513, %r14
pop %rsi
pop %rdi
pop %rcx
pop %rax
pop %r14
pop %r11
ret

    .global s_faulty_load
s_faulty_load:
push %r12
push %r8
push %r9
push %rcx
push %rdi
push %rsi

// REPMOV
lea addresses_RW+0xbcd3, %rsi
lea addresses_PSE+0x1d9bb, %rdi
clflush (%rsi)
xor %r9, %r9
mov $79, %rcx
rep movsb
nop
nop
nop
nop
sub $43315, %rdi

// Faulty Load
lea addresses_RW+0xd2bb, %rdi
nop
nop
inc %r9
movups (%rdi), %xmm4
vpextrq $0, %xmm4, %rsi
lea oracles, %r9
and $0xff, %rsi
shlq $12, %rsi
mov (%r9,%rsi,1), %rsi
pop %rsi
pop %rdi
pop %rcx
pop %r9
pop %r8
pop %r12
ret

/*
<gen_faulty_load>
[REF]
{'OP': 'LOAD', 'src': {'same': True, 'type': 'addresses_RW', 'NT': False, 'AVXalign': False, 'size': 8, 'congruent': 0}}
{'OP': 'REPM', 'src': {'same': False, 'congruent': 3, 'type': 'addresses_RW'}, 'dst': {'same': False, 'congruent': 8, 'type': 'addresses_PSE'}}
[Faulty Load]
{'OP': 'LOAD', 'src': {'same': True, 'type': 'addresses_RW', 'NT': False, 'AVXalign': False, 'size': 16, 'congruent': 0}}
<gen_prepare_buffer>
{'OP': 'REPM', 'src': {'same': True, 'congruent': 0, 'type': 'addresses_normal_ht'}, 'dst': {'same': True, 'congruent': 5, 'type': 'addresses_A_ht'}}
{'OP': 'LOAD', 'src': {'same': False, 'type': 'addresses_normal_ht', 'NT': False, 'AVXalign': False, 'size': 8, 'congruent': 3}}
{'32': 21829}

*/
