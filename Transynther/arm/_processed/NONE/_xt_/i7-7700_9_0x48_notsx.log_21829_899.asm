.global s_prepare_buffers
s_prepare_buffers:
push %r11
push %r9
push %rbp
push %rbx
lea addresses_WC_ht+0xa528, %rbx
nop
nop
nop
nop
cmp %r9, %r9
movl $0x61626364, (%rbx)
inc %r11
pop %rbx
pop %rbp
pop %r9
pop %r11
ret

    .global s_faulty_load
s_faulty_load:
push %r10
push %r15
push %r8
push %r9
push %rbp
push %rcx
push %rdi

// Load
mov $0x248, %r8
nop
nop
nop
sub %rdi, %rdi
vmovups (%r8), %ymm3
vextracti128 $1, %ymm3, %xmm3
vpextrq $0, %xmm3, %r10
nop
nop
nop
nop
nop
and $30818, %rbp

// Store
lea addresses_US+0x196b8, %r9
nop
nop
nop
nop
nop
add $19666, %rcx
movb $0x51, (%r9)

// Exception!!!
nop
nop
nop
nop
nop
mov (0), %r9
sub $34018, %r10

// Store
lea addresses_US+0x1236, %rdi
nop
nop
sub %r10, %r10
mov $0x5152535455565758, %r9
movq %r9, (%rdi)
nop
nop
nop
nop
nop
sub %rdi, %rdi

// Store
lea addresses_A+0xe868, %rcx
and %r9, %r9
mov $0x5152535455565758, %rbp
movq %rbp, %xmm5
vmovups %ymm5, (%rcx)
nop
nop
cmp $36084, %r15

// Faulty Load
lea addresses_D+0x1b528, %rbp
nop
and %r8, %r8
mov (%rbp), %r10d
lea oracles, %rcx
and $0xff, %r10
shlq $12, %r10
mov (%rcx,%r10,1), %r10
pop %rdi
pop %rcx
pop %rbp
pop %r9
pop %r8
pop %r15
pop %r10
ret

/*
<gen_faulty_load>
[REF]
{'OP': 'LOAD', 'src': {'same': False, 'NT': False, 'AVXalign': False, 'size': 1, 'type': 'addresses_D', 'congruent': 0}}
{'OP': 'LOAD', 'src': {'same': False, 'NT': False, 'AVXalign': False, 'size': 32, 'type': 'addresses_P', 'congruent': 4}}
{'dst': {'same': False, 'NT': False, 'AVXalign': False, 'size': 1, 'type': 'addresses_US', 'congruent': 4}, 'OP': 'STOR'}
{'dst': {'same': False, 'NT': False, 'AVXalign': False, 'size': 8, 'type': 'addresses_US', 'congruent': 1}, 'OP': 'STOR'}
{'dst': {'same': False, 'NT': False, 'AVXalign': False, 'size': 32, 'type': 'addresses_A', 'congruent': 2}, 'OP': 'STOR'}
[Faulty Load]
{'OP': 'LOAD', 'src': {'same': True, 'NT': False, 'AVXalign': False, 'size': 4, 'type': 'addresses_D', 'congruent': 0}}
<gen_prepare_buffer>
{'dst': {'same': False, 'NT': False, 'AVXalign': True, 'size': 4, 'type': 'addresses_WC_ht', 'congruent': 11}, 'OP': 'STOR'}
{'36': 21829}

*/
