.global s_prepare_buffers
s_prepare_buffers:
push %r10
push %r11
push %r12
push %r15
push %r8
push %rbx
push %rcx
push %rdi
push %rsi
lea addresses_WT_ht+0xade6, %rbx
nop
nop
nop
nop
nop
dec %r11
mov (%rbx), %r10w
nop
sub %r15, %r15
lea addresses_A_ht+0x7a1a, %r8
sub %r10, %r10
mov $0x6162636465666768, %r12
movq %r12, (%r8)
nop
nop
nop
nop
add $49480, %r12
lea addresses_UC_ht+0x195a6, %rsi
lea addresses_UC_ht+0x14332, %rdi
nop
nop
nop
nop
nop
sub %r8, %r8
mov $92, %rcx
rep movsb
nop
nop
cmp $64576, %r15
lea addresses_A_ht+0x1a90e, %r8
nop
nop
nop
nop
nop
add %r15, %r15
mov $0x6162636465666768, %r11
movq %r11, %xmm2
movups %xmm2, (%r8)
mfence
pop %rsi
pop %rdi
pop %rcx
pop %rbx
pop %r8
pop %r15
pop %r12
pop %r11
pop %r10
ret

    .global s_faulty_load
s_faulty_load:
push %r11
push %r15
push %rax
push %rdi
push %rsi

// Faulty Load
lea addresses_RW+0x31a6, %rdi
nop
nop
nop
lfence
vmovups (%rdi), %ymm2
vextracti128 $0, %ymm2, %xmm2
vpextrq $0, %xmm2, %rsi
lea oracles, %r11
and $0xff, %rsi
shlq $12, %rsi
mov (%r11,%rsi,1), %rsi
pop %rsi
pop %rdi
pop %rax
pop %r15
pop %r11
ret

/*
<gen_faulty_load>
[REF]
{'src': {'type': 'addresses_RW', 'same': False, 'size': 4, 'congruent': 0, 'NT': False, 'AVXalign': True}, 'OP': 'LOAD'}
[Faulty Load]
{'src': {'type': 'addresses_RW', 'same': True, 'size': 32, 'congruent': 0, 'NT': False, 'AVXalign': False}, 'OP': 'LOAD'}
<gen_prepare_buffer>
{'src': {'type': 'addresses_WT_ht', 'same': False, 'size': 2, 'congruent': 5, 'NT': False, 'AVXalign': False}, 'OP': 'LOAD'}
{'dst': {'type': 'addresses_A_ht', 'same': False, 'size': 8, 'congruent': 0, 'NT': False, 'AVXalign': False}, 'OP': 'STOR'}
{'src': {'type': 'addresses_UC_ht', 'congruent': 10, 'same': False}, 'dst': {'type': 'addresses_UC_ht', 'congruent': 2, 'same': False}, 'OP': 'REPM'}
{'dst': {'type': 'addresses_A_ht', 'same': False, 'size': 16, 'congruent': 3, 'NT': False, 'AVXalign': False}, 'OP': 'STOR'}
{'32': 21829}

*/
