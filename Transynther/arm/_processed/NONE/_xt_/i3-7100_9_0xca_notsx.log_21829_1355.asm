.global s_prepare_buffers
s_prepare_buffers:
push %r11
push %rbp
push %rbx
push %rcx
push %rdi
push %rsi
lea addresses_WC_ht+0x11dd3, %rsi
lea addresses_normal_ht+0x1b53, %rdi
nop
nop
nop
nop
cmp %rbp, %rbp
mov $9, %rcx
rep movsl
nop
and $44124, %r11
lea addresses_normal_ht+0x7bd3, %r11
nop
nop
nop
nop
inc %rbp
movl $0x61626364, (%r11)
nop
cmp $48297, %rbp
lea addresses_A_ht+0x17e53, %rcx
xor %rbx, %rbx
mov $0x6162636465666768, %rdi
movq %rdi, (%rcx)
nop
nop
and %rsi, %rsi
pop %rsi
pop %rdi
pop %rcx
pop %rbx
pop %rbp
pop %r11
ret

    .global s_faulty_load
s_faulty_load:
push %r10
push %r12
push %r13
push %r14
push %r15
push %r9
push %rbx

// Store
lea addresses_normal+0xffd3, %r15
nop
nop
nop
sub %r14, %r14
mov $0x5152535455565758, %rbx
movq %rbx, (%r15)
nop
nop
nop
nop
nop
xor $29652, %rbx

// Faulty Load
lea addresses_RW+0x189d3, %r15
clflush (%r15)
nop
nop
and %r13, %r13
movups (%r15), %xmm7
vpextrq $0, %xmm7, %r14
lea oracles, %r10
and $0xff, %r14
shlq $12, %r14
mov (%r10,%r14,1), %r14
pop %rbx
pop %r9
pop %r15
pop %r14
pop %r13
pop %r12
pop %r10
ret

/*
<gen_faulty_load>
[REF]
{'src': {'same': False, 'congruent': 0, 'NT': False, 'type': 'addresses_RW', 'size': 4, 'AVXalign': False}, 'OP': 'LOAD'}
{'OP': 'STOR', 'dst': {'same': False, 'congruent': 9, 'NT': False, 'type': 'addresses_normal', 'size': 8, 'AVXalign': False}}
[Faulty Load]
{'src': {'same': True, 'congruent': 0, 'NT': False, 'type': 'addresses_RW', 'size': 16, 'AVXalign': False}, 'OP': 'LOAD'}
<gen_prepare_buffer>
{'src': {'type': 'addresses_WC_ht', 'congruent': 9, 'same': False}, 'OP': 'REPM', 'dst': {'type': 'addresses_normal_ht', 'congruent': 7, 'same': False}}
{'OP': 'STOR', 'dst': {'same': False, 'congruent': 8, 'NT': False, 'type': 'addresses_normal_ht', 'size': 4, 'AVXalign': False}}
{'OP': 'STOR', 'dst': {'same': False, 'congruent': 3, 'NT': False, 'type': 'addresses_A_ht', 'size': 8, 'AVXalign': False}}
{'32': 21829}

*/
