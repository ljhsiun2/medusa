.global s_prepare_buffers
s_prepare_buffers:
push %r11
push %r13
push %r15
push %r8
push %rcx
push %rdi
push %rsi
lea addresses_A_ht+0x1bb08, %rcx
nop
nop
nop
cmp $11414, %r15
movb $0x61, (%rcx)
nop
nop
nop
nop
xor $16765, %r11
lea addresses_WT_ht+0x14038, %rdi
clflush (%rdi)
nop
nop
nop
nop
nop
cmp %r8, %r8
mov (%rdi), %r13d
nop
nop
add $20083, %rdi
lea addresses_WC_ht+0x5c90, %rsi
lea addresses_WC_ht+0x14ca8, %rdi
nop
cmp $29573, %r8
mov $0, %rcx
rep movsq
nop
dec %r8
lea addresses_normal_ht+0xe08, %rsi
lea addresses_A_ht+0xddc8, %rdi
nop
xor $20827, %r15
mov $71, %rcx
rep movsl
nop
nop
nop
nop
cmp %r8, %r8
pop %rsi
pop %rdi
pop %rcx
pop %r8
pop %r15
pop %r13
pop %r11
ret

    .global s_faulty_load
s_faulty_load:
push %r10
push %r12
push %r15
push %rbp
push %rbx
push %rcx

// Faulty Load
lea addresses_RW+0x1cb08, %r10
nop
nop
sub $29069, %r12
mov (%r10), %r15
lea oracles, %rcx
and $0xff, %r15
shlq $12, %r15
mov (%rcx,%r15,1), %r15
pop %rcx
pop %rbx
pop %rbp
pop %r15
pop %r12
pop %r10
ret

/*
<gen_faulty_load>
[REF]
{'src': {'type': 'addresses_RW', 'same': False, 'size': 2, 'congruent': 0, 'NT': True, 'AVXalign': False}, 'OP': 'LOAD'}
[Faulty Load]
{'src': {'type': 'addresses_RW', 'same': True, 'size': 8, 'congruent': 0, 'NT': False, 'AVXalign': False}, 'OP': 'LOAD'}
<gen_prepare_buffer>
{'dst': {'type': 'addresses_A_ht', 'same': False, 'size': 1, 'congruent': 10, 'NT': False, 'AVXalign': False}, 'OP': 'STOR'}
{'src': {'type': 'addresses_WT_ht', 'same': False, 'size': 4, 'congruent': 4, 'NT': False, 'AVXalign': False}, 'OP': 'LOAD'}
{'src': {'type': 'addresses_WC_ht', 'congruent': 2, 'same': False}, 'dst': {'type': 'addresses_WC_ht', 'congruent': 5, 'same': False}, 'OP': 'REPM'}
{'src': {'type': 'addresses_normal_ht', 'congruent': 7, 'same': False}, 'dst': {'type': 'addresses_A_ht', 'congruent': 6, 'same': False}, 'OP': 'REPM'}
{'32': 21829}

*/
