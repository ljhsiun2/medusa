.global s_prepare_buffers
s_prepare_buffers:
push %r10
push %r12
push %r15
push %r8
push %rax
push %rbp
lea addresses_D_ht+0x1a36, %r10
nop
sub %r8, %r8
vmovups (%r10), %ymm3
vextracti128 $0, %ymm3, %xmm3
vpextrq $0, %xmm3, %r12
nop
nop
nop
nop
nop
sub $11359, %r12
lea addresses_WT_ht+0xcdf6, %r12
nop
nop
dec %rbp
movl $0x61626364, (%r12)
nop
cmp $44203, %rbp
lea addresses_A_ht+0x1e236, %r15
nop
nop
sub $61223, %rax
mov (%r15), %bp
nop
xor %r10, %r10
lea addresses_WT_ht+0x17206, %r10
nop
and $27014, %rax
movw $0x6162, (%r10)
inc %r8
pop %rbp
pop %rax
pop %r8
pop %r15
pop %r12
pop %r10
ret

    .global s_faulty_load
s_faulty_load:
push %r11
push %r12
push %r13
push %r15
push %r9
push %rcx
push %rdi

// Store
lea addresses_D+0x16b76, %rdi
nop
xor $27391, %r13
mov $0x5152535455565758, %r12
movq %r12, (%rdi)
nop
nop
nop
nop
nop
cmp $13666, %r11

// Faulty Load
lea addresses_RW+0x2a36, %r9
nop
nop
nop
and $12410, %rcx
mov (%r9), %r11d
lea oracles, %r13
and $0xff, %r11
shlq $12, %r11
mov (%r13,%r11,1), %r11
pop %rdi
pop %rcx
pop %r9
pop %r15
pop %r13
pop %r12
pop %r11
ret

/*
<gen_faulty_load>
[REF]
{'src': {'NT': False, 'same': False, 'congruent': 0, 'type': 'addresses_RW', 'AVXalign': False, 'size': 1}, 'OP': 'LOAD'}
{'OP': 'STOR', 'dst': {'NT': True, 'same': False, 'congruent': 6, 'type': 'addresses_D', 'AVXalign': False, 'size': 8}}
[Faulty Load]
{'src': {'NT': False, 'same': True, 'congruent': 0, 'type': 'addresses_RW', 'AVXalign': False, 'size': 4}, 'OP': 'LOAD'}
<gen_prepare_buffer>
{'src': {'NT': False, 'same': False, 'congruent': 10, 'type': 'addresses_D_ht', 'AVXalign': False, 'size': 32}, 'OP': 'LOAD'}
{'OP': 'STOR', 'dst': {'NT': False, 'same': False, 'congruent': 6, 'type': 'addresses_WT_ht', 'AVXalign': False, 'size': 4}}
{'src': {'NT': False, 'same': False, 'congruent': 10, 'type': 'addresses_A_ht', 'AVXalign': False, 'size': 2}, 'OP': 'LOAD'}
{'OP': 'STOR', 'dst': {'NT': False, 'same': False, 'congruent': 3, 'type': 'addresses_WT_ht', 'AVXalign': False, 'size': 2}}
{'32': 21829}

*/
