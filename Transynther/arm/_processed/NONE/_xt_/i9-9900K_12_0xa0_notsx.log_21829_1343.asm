.global s_prepare_buffers
s_prepare_buffers:
push %r11
push %r14
push %r15
push %rbx
push %rcx
push %rdi
push %rdx
push %rsi
lea addresses_D_ht+0x8c1a, %rdi
add %rdx, %rdx
mov (%rdi), %r11d
nop
nop
add %rsi, %rsi
lea addresses_D_ht+0x88b6, %r15
nop
nop
nop
nop
nop
cmp $23406, %rbx
movups (%r15), %xmm2
vpextrq $1, %xmm2, %rdx
nop
nop
nop
nop
cmp %rbx, %rbx
lea addresses_A_ht+0xeb42, %rsi
lea addresses_WC_ht+0x135a2, %rdi
nop
nop
inc %r14
mov $19, %rcx
rep movsl
nop
and $45065, %r11
pop %rsi
pop %rdx
pop %rdi
pop %rcx
pop %rbx
pop %r15
pop %r14
pop %r11
ret

    .global s_faulty_load
s_faulty_load:
push %r12
push %r13
push %r15
push %r8
push %r9
push %rbx
push %rdx

// Store
lea addresses_D+0x1279a, %r15
nop
nop
xor $18431, %rdx
mov $0x5152535455565758, %r9
movq %r9, %xmm1
vmovups %ymm1, (%r15)
nop
nop
add %r13, %r13

// Faulty Load
lea addresses_RW+0x64a2, %r8
nop
nop
nop
nop
nop
sub $57911, %r12
movups (%r8), %xmm7
vpextrq $0, %xmm7, %r15
lea oracles, %r13
and $0xff, %r15
shlq $12, %r15
mov (%r13,%r15,1), %r15
pop %rdx
pop %rbx
pop %r9
pop %r8
pop %r15
pop %r13
pop %r12
ret

/*
<gen_faulty_load>
[REF]
{'src': {'type': 'addresses_RW', 'AVXalign': False, 'size': 4, 'NT': False, 'same': False, 'congruent': 0}, 'OP': 'LOAD'}
{'OP': 'STOR', 'dst': {'type': 'addresses_D', 'AVXalign': False, 'size': 32, 'NT': False, 'same': False, 'congruent': 2}}
[Faulty Load]
{'src': {'type': 'addresses_RW', 'AVXalign': False, 'size': 16, 'NT': False, 'same': True, 'congruent': 0}, 'OP': 'LOAD'}
<gen_prepare_buffer>
{'src': {'type': 'addresses_D_ht', 'AVXalign': False, 'size': 4, 'NT': True, 'same': False, 'congruent': 3}, 'OP': 'LOAD'}
{'src': {'type': 'addresses_D_ht', 'AVXalign': False, 'size': 16, 'NT': False, 'same': False, 'congruent': 0}, 'OP': 'LOAD'}
{'src': {'type': 'addresses_A_ht', 'congruent': 5, 'same': False}, 'OP': 'REPM', 'dst': {'type': 'addresses_WC_ht', 'congruent': 5, 'same': False}}
{'32': 21829}

*/
