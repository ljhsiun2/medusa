.global s_prepare_buffers
s_prepare_buffers:
ret

    .global s_faulty_load
s_faulty_load:
push %r11
push %r13
push %r14
push %r8
push %rbx
push %rdx
push %rsi

// Store
lea addresses_normal+0xab0e, %rsi
clflush (%rsi)
nop
nop
nop
nop
nop
add $9236, %r11
mov $0x5152535455565758, %rdx
movq %rdx, (%rsi)
nop
add $22661, %rbx

// Store
lea addresses_WC+0x1d2b9, %r13
clflush (%r13)
xor $6271, %r11
mov $0x5152535455565758, %r14
movq %r14, %xmm0
movups %xmm0, (%r13)
xor $39352, %r14

// Store
lea addresses_D+0x74b3, %rbx
nop
nop
nop
add %rsi, %rsi
mov $0x5152535455565758, %rdx
movq %rdx, %xmm2
movups %xmm2, (%rbx)
nop
nop
nop
dec %rsi

// Store
lea addresses_A+0xbe99, %r14
nop
nop
nop
xor %rbx, %rbx
movl $0x51525354, (%r14)
nop
nop
nop
add $50907, %r14

// Load
lea addresses_RW+0x10759, %r13
and $11480, %r8
movups (%r13), %xmm6
vpextrq $0, %xmm6, %rbx
nop
nop
nop
add $21675, %r11

// Faulty Load
lea addresses_RW+0x10759, %rdx
nop
nop
nop
nop
nop
xor %rsi, %rsi
movb (%rdx), %r14b
lea oracles, %rbx
and $0xff, %r14
shlq $12, %r14
mov (%rbx,%r14,1), %r14
pop %rsi
pop %rdx
pop %rbx
pop %r8
pop %r14
pop %r13
pop %r11
ret

/*
<gen_faulty_load>
[REF]
{'OP': 'LOAD', 'src': {'same': True, 'NT': False, 'AVXalign': False, 'size': 2, 'type': 'addresses_RW', 'congruent': 0}}
{'dst': {'same': False, 'NT': False, 'AVXalign': False, 'size': 8, 'type': 'addresses_normal', 'congruent': 0}, 'OP': 'STOR'}
{'dst': {'same': False, 'NT': False, 'AVXalign': False, 'size': 16, 'type': 'addresses_WC', 'congruent': 4}, 'OP': 'STOR'}
{'dst': {'same': False, 'NT': False, 'AVXalign': False, 'size': 16, 'type': 'addresses_D', 'congruent': 0}, 'OP': 'STOR'}
{'dst': {'same': False, 'NT': False, 'AVXalign': False, 'size': 4, 'type': 'addresses_A', 'congruent': 6}, 'OP': 'STOR'}
{'OP': 'LOAD', 'src': {'same': True, 'NT': False, 'AVXalign': False, 'size': 16, 'type': 'addresses_RW', 'congruent': 0}}
[Faulty Load]
{'OP': 'LOAD', 'src': {'same': True, 'NT': False, 'AVXalign': False, 'size': 1, 'type': 'addresses_RW', 'congruent': 0}}
<gen_prepare_buffer>
{'32': 21829}

*/
