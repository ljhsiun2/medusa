.global s_prepare_buffers
s_prepare_buffers:
push %r11
push %r13
push %r14
push %r8
push %rbx
push %rcx
push %rsi
lea addresses_WC_ht+0x17547, %r13
nop
nop
nop
nop
nop
sub %r14, %r14
mov (%r13), %rsi
nop
nop
nop
nop
add $51279, %rbx
lea addresses_A_ht+0x1baad, %r14
nop
nop
nop
and %r8, %r8
movups (%r14), %xmm1
vpextrq $0, %xmm1, %rcx
nop
nop
inc %r13
lea addresses_D_ht+0x71ad, %r8
nop
nop
nop
nop
nop
add $25084, %r11
mov $0x6162636465666768, %r14
movq %r14, (%r8)
nop
nop
nop
nop
nop
xor %r14, %r14
lea addresses_WC_ht+0xe4ad, %r13
clflush (%r13)
add $61065, %rbx
movw $0x6162, (%r13)
nop
nop
nop
nop
nop
sub $40836, %r11
lea addresses_WT_ht+0x16aad, %r14
nop
nop
nop
nop
dec %rsi
movb $0x61, (%r14)
nop
nop
nop
xor %r8, %r8
pop %rsi
pop %rcx
pop %rbx
pop %r8
pop %r14
pop %r13
pop %r11
ret

    .global s_faulty_load
s_faulty_load:
push %r11
push %r8
push %r9
push %rdi
push %rdx

// Faulty Load
lea addresses_RW+0x64ad, %r9
nop
cmp %rdx, %rdx
mov (%r9), %r11d
lea oracles, %rdi
and $0xff, %r11
shlq $12, %r11
mov (%rdi,%r11,1), %r11
pop %rdx
pop %rdi
pop %r9
pop %r8
pop %r11
ret

/*
<gen_faulty_load>
[REF]
{'src': {'type': 'addresses_RW', 'AVXalign': False, 'size': 16, 'NT': False, 'same': False, 'congruent': 0}, 'OP': 'LOAD'}
[Faulty Load]
{'src': {'type': 'addresses_RW', 'AVXalign': False, 'size': 4, 'NT': False, 'same': True, 'congruent': 0}, 'OP': 'LOAD'}
<gen_prepare_buffer>
{'src': {'type': 'addresses_WC_ht', 'AVXalign': False, 'size': 8, 'NT': False, 'same': False, 'congruent': 0}, 'OP': 'LOAD'}
{'src': {'type': 'addresses_A_ht', 'AVXalign': False, 'size': 16, 'NT': False, 'same': False, 'congruent': 7}, 'OP': 'LOAD'}
{'OP': 'STOR', 'dst': {'type': 'addresses_D_ht', 'AVXalign': True, 'size': 8, 'NT': False, 'same': False, 'congruent': 8}}
{'OP': 'STOR', 'dst': {'type': 'addresses_WC_ht', 'AVXalign': False, 'size': 2, 'NT': False, 'same': False, 'congruent': 10}}
{'OP': 'STOR', 'dst': {'type': 'addresses_WT_ht', 'AVXalign': True, 'size': 1, 'NT': False, 'same': False, 'congruent': 8}}
{'32': 21829}

*/
