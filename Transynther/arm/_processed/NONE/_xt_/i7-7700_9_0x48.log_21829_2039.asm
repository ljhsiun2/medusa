.global s_prepare_buffers
s_prepare_buffers:
push %r10
push %r11
push %r14
push %r15
push %r9
push %rcx
push %rdi
lea addresses_WT_ht+0x10586, %r11
cmp $42132, %r10
mov $0x6162636465666768, %r14
movq %r14, %xmm2
and $0xffffffffffffffc0, %r11
vmovntdq %ymm2, (%r11)
nop
nop
nop
nop
nop
xor %r9, %r9
lea addresses_D_ht+0x12406, %r15
nop
nop
cmp $17215, %rcx
movw $0x6162, (%r15)
nop
nop
nop
inc %r14
pop %rdi
pop %rcx
pop %r9
pop %r15
pop %r14
pop %r11
pop %r10
ret

    .global s_faulty_load
s_faulty_load:
push %r12
push %r13
push %r14
push %r15
push %r9
push %rbx
push %rsi

// Store
lea addresses_PSE+0xdb2a, %rsi
nop
nop
sub $21747, %rbx
mov $0x5152535455565758, %r12
movq %r12, (%rsi)
nop
nop
nop
nop
and %rbx, %rbx

// Store
lea addresses_PSE+0x112ce, %r12
nop
add %r9, %r9
movl $0x51525354, (%r12)
nop
nop
xor %rsi, %rsi

// Store
lea addresses_A+0x1d726, %rsi
nop
nop
nop
add %r14, %r14
mov $0x5152535455565758, %rbx
movq %rbx, (%rsi)
nop
nop
and %r13, %r13

// Faulty Load
lea addresses_D+0x13806, %r12
nop
nop
nop
and $63746, %rbx
mov (%r12), %r13d
lea oracles, %r9
and $0xff, %r13
shlq $12, %r13
mov (%r9,%r13,1), %r13
pop %rsi
pop %rbx
pop %r9
pop %r15
pop %r14
pop %r13
pop %r12
ret

/*
<gen_faulty_load>
[REF]
{'OP': 'LOAD', 'src': {'type': 'addresses_D', 'AVXalign': False, 'congruent': 0, 'size': 32, 'same': False, 'NT': True}}
{'OP': 'STOR', 'dst': {'type': 'addresses_PSE', 'AVXalign': False, 'congruent': 1, 'size': 8, 'same': False, 'NT': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_PSE', 'AVXalign': False, 'congruent': 3, 'size': 4, 'same': False, 'NT': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_A', 'AVXalign': False, 'congruent': 4, 'size': 8, 'same': False, 'NT': False}}
[Faulty Load]
{'OP': 'LOAD', 'src': {'type': 'addresses_D', 'AVXalign': False, 'congruent': 0, 'size': 4, 'same': True, 'NT': False}}
<gen_prepare_buffer>
{'OP': 'STOR', 'dst': {'type': 'addresses_WT_ht', 'AVXalign': False, 'congruent': 7, 'size': 32, 'same': False, 'NT': True}}
{'OP': 'STOR', 'dst': {'type': 'addresses_D_ht', 'AVXalign': False, 'congruent': 10, 'size': 2, 'same': False, 'NT': False}}
{'36': 21829}

*/
