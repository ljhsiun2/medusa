.global s_prepare_buffers
s_prepare_buffers:
push %r10
push %r13
push %r14
push %r8
push %rdi
push %rdx
lea addresses_UC_ht+0x270b, %r10
nop
and $43103, %rdi
mov $0x6162636465666768, %r14
movq %r14, %xmm2
vmovups %ymm2, (%r10)
nop
nop
nop
nop
nop
cmp $17741, %r8
lea addresses_A_ht+0x163c1, %r13
nop
nop
sub $63786, %rdx
mov $0x6162636465666768, %r14
movq %r14, (%r13)
nop
nop
and $46997, %r10
pop %rdx
pop %rdi
pop %r8
pop %r14
pop %r13
pop %r10
ret

    .global s_faulty_load
s_faulty_load:
push %r10
push %r11
push %r12
push %rax
push %rbx
push %rdi
push %rdx

// Store
lea addresses_normal+0x1985b, %r11
nop
nop
nop
nop
dec %r12
mov $0x5152535455565758, %r10
movq %r10, %xmm7
movups %xmm7, (%r11)
nop
nop
nop
nop
cmp %rdi, %rdi

// Store
mov $0x4f94dc000000099b, %rbx
nop
nop
nop
nop
nop
xor $65336, %rdx
mov $0x5152535455565758, %r11
movq %r11, %xmm2
movups %xmm2, (%rbx)
sub $52412, %rdi

// Store
lea addresses_D+0xa01b, %r12
clflush (%r12)
nop
inc %rax
mov $0x5152535455565758, %r10
movq %r10, (%r12)
nop
nop
xor $12245, %rax

// Faulty Load
lea addresses_RW+0x239b, %r11
nop
nop
nop
nop
inc %rdi
movb (%r11), %bl
lea oracles, %r11
and $0xff, %rbx
shlq $12, %rbx
mov (%r11,%rbx,1), %rbx
pop %rdx
pop %rdi
pop %rbx
pop %rax
pop %r12
pop %r11
pop %r10
ret

/*
<gen_faulty_load>
[REF]
{'OP': 'LOAD', 'src': {'type': 'addresses_RW', 'AVXalign': False, 'congruent': 0, 'size': 2, 'same': False, 'NT': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_normal', 'AVXalign': False, 'congruent': 6, 'size': 16, 'same': False, 'NT': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_NC', 'AVXalign': False, 'congruent': 8, 'size': 16, 'same': False, 'NT': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_D', 'AVXalign': False, 'congruent': 6, 'size': 8, 'same': False, 'NT': False}}
[Faulty Load]
{'OP': 'LOAD', 'src': {'type': 'addresses_RW', 'AVXalign': False, 'congruent': 0, 'size': 1, 'same': True, 'NT': False}}
<gen_prepare_buffer>
{'OP': 'STOR', 'dst': {'type': 'addresses_UC_ht', 'AVXalign': False, 'congruent': 3, 'size': 32, 'same': False, 'NT': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_A_ht', 'AVXalign': False, 'congruent': 1, 'size': 8, 'same': False, 'NT': False}}
{'32': 21829}

*/
