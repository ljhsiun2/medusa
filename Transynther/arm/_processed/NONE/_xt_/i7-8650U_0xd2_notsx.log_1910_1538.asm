.global s_prepare_buffers
s_prepare_buffers:
push %r11
push %r14
push %r8
push %rbx
push %rdx
lea addresses_UC_ht+0x9a21, %r8
nop
nop
inc %rbx
vmovups (%r8), %ymm4
vextracti128 $1, %ymm4, %xmm4
vpextrq $1, %xmm4, %r11
nop
nop
nop
nop
nop
xor $50364, %r11
lea addresses_A_ht+0x108d9, %rdx
add $27374, %r8
mov (%rdx), %r14
nop
nop
nop
sub %r11, %r11
pop %rdx
pop %rbx
pop %r8
pop %r14
pop %r11
ret

    .global s_faulty_load
s_faulty_load:
push %r10
push %r11
push %r12
push %r14
push %r15
push %rbx
push %rsi

// Store
lea addresses_PSE+0x11a59, %r11
nop
dec %rbx
movw $0x5152, (%r11)
nop
nop
nop
nop
nop
inc %r10

// Store
lea addresses_UC+0x1ad05, %r14
xor $24890, %r12
movl $0x51525354, (%r14)
nop
nop
nop
nop
nop
xor %r14, %r14

// Store
lea addresses_WC+0x74d9, %rsi
nop
nop
nop
nop
nop
xor %r12, %r12
mov $0x5152535455565758, %rbx
movq %rbx, %xmm0
movups %xmm0, (%rsi)

// Exception!!!
mov (0), %r11
nop
nop
nop
xor %r11, %r11

// Faulty Load
lea addresses_D+0x54d9, %r11
nop
nop
xor %r12, %r12
movups (%r11), %xmm5
vpextrq $0, %xmm5, %rsi
lea oracles, %r12
and $0xff, %rsi
shlq $12, %rsi
mov (%r12,%rsi,1), %rsi
pop %rsi
pop %rbx
pop %r15
pop %r14
pop %r12
pop %r11
pop %r10
ret

/*
<gen_faulty_load>
[REF]
{'OP': 'LOAD', 'src': {'type': 'addresses_D', 'size': 1, 'AVXalign': True, 'NT': False, 'congruent': 0, 'same': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_PSE', 'size': 2, 'AVXalign': False, 'NT': False, 'congruent': 7, 'same': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_UC', 'size': 4, 'AVXalign': False, 'NT': False, 'congruent': 1, 'same': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_WC', 'size': 16, 'AVXalign': False, 'NT': False, 'congruent': 11, 'same': False}}
[Faulty Load]
{'OP': 'LOAD', 'src': {'type': 'addresses_D', 'size': 16, 'AVXalign': False, 'NT': False, 'congruent': 0, 'same': True}}
<gen_prepare_buffer>
{'OP': 'LOAD', 'src': {'type': 'addresses_UC_ht', 'size': 32, 'AVXalign': False, 'NT': False, 'congruent': 2, 'same': False}}
{'OP': 'LOAD', 'src': {'type': 'addresses_A_ht', 'size': 8, 'AVXalign': False, 'NT': False, 'congruent': 10, 'same': False}}
{'36': 1910}

*/
