.global s_prepare_buffers
s_prepare_buffers:
push %r13
push %rax
push %rbx
push %rcx
push %rdi
push %rdx
push %rsi
lea addresses_A_ht+0x2d68, %rdi
nop
nop
nop
sub $58319, %rdx
movb $0x61, (%rdi)
nop
nop
add %rax, %rax
lea addresses_WC_ht+0x17e30, %rsi
lea addresses_A_ht+0x9c60, %rdi
clflush (%rdi)
nop
nop
nop
nop
nop
xor %rbx, %rbx
mov $57, %rcx
rep movsl
and %rcx, %rcx
pop %rsi
pop %rdx
pop %rdi
pop %rcx
pop %rbx
pop %rax
pop %r13
ret

    .global s_faulty_load
s_faulty_load:
push %r10
push %r11
push %r15
push %r8
push %rbx
push %rcx
push %rdi

// Store
lea addresses_RW+0x20a0, %rdi
clflush (%rdi)
cmp %r8, %r8
mov $0x5152535455565758, %r10
movq %r10, (%rdi)
nop
nop
nop
xor $15028, %rdi

// Store
lea addresses_RW+0x14e10, %rbx
nop
nop
nop
sub %r15, %r15
movb $0x51, (%rbx)
add %r10, %r10

// Faulty Load
lea addresses_RW+0xaa30, %r15
nop
add %rbx, %rbx
mov (%r15), %r8d
lea oracles, %r10
and $0xff, %r8
shlq $12, %r8
mov (%r10,%r8,1), %r8
pop %rdi
pop %rcx
pop %rbx
pop %r8
pop %r15
pop %r11
pop %r10
ret

/*
<gen_faulty_load>
[REF]
{'src': {'type': 'addresses_RW', 'same': False, 'size': 1, 'congruent': 0, 'NT': False, 'AVXalign': False}, 'OP': 'LOAD'}
{'dst': {'type': 'addresses_RW', 'same': False, 'size': 8, 'congruent': 4, 'NT': False, 'AVXalign': False}, 'OP': 'STOR'}
{'dst': {'type': 'addresses_RW', 'same': False, 'size': 1, 'congruent': 4, 'NT': False, 'AVXalign': False}, 'OP': 'STOR'}
[Faulty Load]
{'src': {'type': 'addresses_RW', 'same': True, 'size': 4, 'congruent': 0, 'NT': False, 'AVXalign': False}, 'OP': 'LOAD'}
<gen_prepare_buffer>
{'dst': {'type': 'addresses_A_ht', 'same': False, 'size': 1, 'congruent': 3, 'NT': False, 'AVXalign': False}, 'OP': 'STOR'}
{'src': {'type': 'addresses_WC_ht', 'congruent': 10, 'same': False}, 'dst': {'type': 'addresses_A_ht', 'congruent': 1, 'same': False}, 'OP': 'REPM'}
{'32': 21829}

*/
