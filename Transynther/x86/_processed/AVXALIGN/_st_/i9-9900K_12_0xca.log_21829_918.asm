.global s_prepare_buffers
s_prepare_buffers:
push %r11
push %r13
push %r14
push %r9
push %rax
push %rbp
push %rcx
lea addresses_D_ht+0xbd7e, %rbp
nop
nop
nop
nop
nop
xor $51855, %r13
movw $0x6162, (%rbp)
nop
sub %r9, %r9
lea addresses_WC_ht+0x155fe, %rcx
nop
add %rax, %rax
movl $0x61626364, (%rcx)
nop
nop
nop
nop
nop
cmp %rbp, %rbp
lea addresses_A_ht+0x10d1e, %rbp
cmp %r11, %r11
mov (%rbp), %r9w
nop
nop
nop
nop
nop
dec %rcx
pop %rcx
pop %rbp
pop %rax
pop %r9
pop %r14
pop %r13
pop %r11
ret

    .global s_faulty_load
s_faulty_load:
push %r10
push %r12
push %r8
push %r9
push %rbp
push %rbx
push %rdi

// Store
mov $0xc7e, %rbx
nop
nop
dec %r8
movb $0x51, (%rbx)
xor $25790, %r12

// Faulty Load
lea addresses_RW+0x207e, %r9
nop
nop
sub $48429, %r10
mov (%r9), %bp
lea oracles, %r8
and $0xff, %rbp
shlq $12, %rbp
mov (%r8,%rbp,1), %rbp
pop %rdi
pop %rbx
pop %rbp
pop %r9
pop %r8
pop %r12
pop %r10
ret

/*
<gen_faulty_load>
[REF]
{'OP': 'LOAD', 'src': {'size': 2, 'NT': False, 'type': 'addresses_RW', 'same': False, 'AVXalign': False, 'congruent': 0}}
{'OP': 'STOR', 'dst': {'size': 1, 'NT': False, 'type': 'addresses_P', 'same': False, 'AVXalign': False, 'congruent': 9}}
[Faulty Load]
{'OP': 'LOAD', 'src': {'size': 2, 'NT': False, 'type': 'addresses_RW', 'same': True, 'AVXalign': True, 'congruent': 0}}
<gen_prepare_buffer>
{'OP': 'STOR', 'dst': {'size': 2, 'NT': False, 'type': 'addresses_D_ht', 'same': False, 'AVXalign': True, 'congruent': 8}}
{'OP': 'STOR', 'dst': {'size': 4, 'NT': False, 'type': 'addresses_WC_ht', 'same': False, 'AVXalign': False, 'congruent': 5}}
{'OP': 'LOAD', 'src': {'size': 2, 'NT': False, 'type': 'addresses_A_ht', 'same': True, 'AVXalign': True, 'congruent': 4}}
{'32': 21829}

*/
