.global s_prepare_buffers
s_prepare_buffers:
push %r10
push %r13
push %rbp
push %rsi
lea addresses_UC_ht+0x1a3e6, %r13
nop
nop
nop
nop
nop
sub %r10, %r10
vmovups (%r13), %ymm4
vextracti128 $1, %ymm4, %xmm4
vpextrq $0, %xmm4, %rsi
nop
nop
and %rbp, %rbp
pop %rsi
pop %rbp
pop %r13
pop %r10
ret

    .global s_faulty_load
s_faulty_load:
push %r12
push %r13
push %r8
push %rax
push %rbp
push %rcx
push %rdi
push %rsi

// Store
lea addresses_WC+0x1c7e6, %r8
nop
and %r12, %r12
mov $0x5152535455565758, %rax
movq %rax, %xmm4
vmovups %ymm4, (%r8)
nop
nop
nop
nop
nop
and $47590, %r13

// REPMOV
lea addresses_WT+0x11a1c, %rsi
lea addresses_WC+0x1afe6, %rdi
nop
nop
and %rbp, %rbp
mov $35, %rcx
rep movsw
nop
nop
nop
cmp $53009, %rbp

// Load
mov $0xfe6, %rdi
xor %rcx, %rcx
movups (%rdi), %xmm3
vpextrq $1, %xmm3, %r13
nop
nop
inc %rsi

// Faulty Load
lea addresses_RW+0xffe6, %rcx
nop
and %r8, %r8
mov (%rcx), %eax
lea oracles, %r8
and $0xff, %rax
shlq $12, %rax
mov (%r8,%rax,1), %rax
pop %rsi
pop %rdi
pop %rcx
pop %rbp
pop %rax
pop %r8
pop %r13
pop %r12
ret

/*
<gen_faulty_load>
[REF]
{'OP': 'LOAD', 'src': {'same': True, 'type': 'addresses_RW', 'NT': True, 'AVXalign': True, 'size': 1, 'congruent': 0}}
{'OP': 'STOR', 'dst': {'same': False, 'type': 'addresses_WC', 'NT': False, 'AVXalign': False, 'size': 32, 'congruent': 8}}
{'OP': 'REPM', 'src': {'same': False, 'congruent': 0, 'type': 'addresses_WT'}, 'dst': {'same': False, 'congruent': 11, 'type': 'addresses_WC'}}
{'OP': 'LOAD', 'src': {'same': False, 'type': 'addresses_P', 'NT': False, 'AVXalign': False, 'size': 16, 'congruent': 11}}
[Faulty Load]
{'OP': 'LOAD', 'src': {'same': True, 'type': 'addresses_RW', 'NT': False, 'AVXalign': True, 'size': 4, 'congruent': 0}}
<gen_prepare_buffer>
{'OP': 'LOAD', 'src': {'same': False, 'type': 'addresses_UC_ht', 'NT': False, 'AVXalign': False, 'size': 32, 'congruent': 8}}
{'32': 21829}

*/
