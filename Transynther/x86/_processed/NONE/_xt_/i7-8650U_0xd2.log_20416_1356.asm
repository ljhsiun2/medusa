.global s_prepare_buffers
s_prepare_buffers:
push %r15
push %rax
push %rcx
lea addresses_UC_ht+0x1a4d2, %rax
nop
sub %rcx, %rcx
mov $0x6162636465666768, %r15
movq %r15, %xmm7
and $0xffffffffffffffc0, %rax
vmovntdq %ymm7, (%rax)
add %rcx, %rcx
pop %rcx
pop %rax
pop %r15
ret

    .global s_faulty_load
s_faulty_load:
push %r10
push %r12
push %r14
push %r9
push %rbp
push %rcx
push %rdx

// Load
lea addresses_WT+0x1d106, %r14
clflush (%r14)
nop
nop
xor %r9, %r9
vmovaps (%r14), %ymm3
vextracti128 $0, %ymm3, %xmm3
vpextrq $1, %xmm3, %r10
nop
nop
nop
nop
nop
cmp %r10, %r10

// Store
lea addresses_D+0x31d4, %r10
nop
nop
nop
nop
sub %rbp, %rbp
mov $0x5152535455565758, %rcx
movq %rcx, (%r10)
nop
nop
nop
nop
nop
xor %r9, %r9

// Faulty Load
lea addresses_PSE+0x1ac52, %r9
nop
nop
cmp $8271, %rdx
mov (%r9), %rbp
lea oracles, %r14
and $0xff, %rbp
shlq $12, %rbp
mov (%r14,%rbp,1), %rbp
pop %rdx
pop %rcx
pop %rbp
pop %r9
pop %r14
pop %r12
pop %r10
ret

/*
<gen_faulty_load>
[REF]
{'OP': 'LOAD', 'src': {'type': 'addresses_PSE', 'size': 32, 'AVXalign': False, 'NT': True, 'congruent': 0, 'same': False}}
{'OP': 'LOAD', 'src': {'type': 'addresses_WT', 'size': 32, 'AVXalign': True, 'NT': True, 'congruent': 1, 'same': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_D', 'size': 8, 'AVXalign': False, 'NT': False, 'congruent': 1, 'same': False}}
[Faulty Load]
{'OP': 'LOAD', 'src': {'type': 'addresses_PSE', 'size': 8, 'AVXalign': False, 'NT': False, 'congruent': 0, 'same': True}}
<gen_prepare_buffer>
{'OP': 'STOR', 'dst': {'type': 'addresses_UC_ht', 'size': 32, 'AVXalign': False, 'NT': True, 'congruent': 7, 'same': False}}
{'33': 20416}

*/
