.global s_prepare_buffers
s_prepare_buffers:
push %r10
push %r13
push %r8
push %r9
push %rbp
push %rdi
push %rdx
lea addresses_UC_ht+0x13d86, %rdi
nop
cmp %r9, %r9
movb (%rdi), %r10b
add $48106, %r8
lea addresses_D_ht+0x1768e, %rdi
nop
and $27992, %rbp
mov $0x6162636465666768, %rdx
movq %rdx, %xmm0
vmovups %ymm0, (%rdi)
nop
nop
nop
nop
add $46818, %r9
lea addresses_D_ht+0xdc6e, %rdi
nop
nop
nop
nop
nop
sub %r13, %r13
movl $0x61626364, (%rdi)
cmp $43279, %r13
lea addresses_normal_ht+0x12a8e, %r9
nop
nop
nop
nop
xor $15849, %r8
vmovups (%r9), %ymm3
vextracti128 $1, %ymm3, %xmm3
vpextrq $1, %xmm3, %r13
nop
nop
nop
inc %rbp
pop %rdx
pop %rdi
pop %rbp
pop %r9
pop %r8
pop %r13
pop %r10
ret

    .global s_faulty_load
s_faulty_load:
push %r14
push %r15
push %rbp
push %rcx
push %rdi
push %rdx

// Faulty Load
lea addresses_RW+0x7e8e, %rbp
nop
nop
nop
sub %rdi, %rdi
movb (%rbp), %r14b
lea oracles, %rdi
and $0xff, %r14
shlq $12, %r14
mov (%rdi,%r14,1), %r14
pop %rdx
pop %rdi
pop %rcx
pop %rbp
pop %r15
pop %r14
ret

/*
<gen_faulty_load>
[REF]
{'OP': 'LOAD', 'src': {'type': 'addresses_RW', 'size': 16, 'AVXalign': False, 'NT': True, 'congruent': 0, 'same': True}}
[Faulty Load]
{'OP': 'LOAD', 'src': {'type': 'addresses_RW', 'size': 1, 'AVXalign': False, 'NT': False, 'congruent': 0, 'same': True}}
<gen_prepare_buffer>
{'OP': 'LOAD', 'src': {'type': 'addresses_UC_ht', 'size': 1, 'AVXalign': False, 'NT': False, 'congruent': 3, 'same': True}}
{'OP': 'STOR', 'dst': {'type': 'addresses_D_ht', 'size': 32, 'AVXalign': False, 'NT': False, 'congruent': 11, 'same': False}}
{'OP': 'STOR', 'dst': {'type': 'addresses_D_ht', 'size': 4, 'AVXalign': False, 'NT': False, 'congruent': 3, 'same': False}}
{'OP': 'LOAD', 'src': {'type': 'addresses_normal_ht', 'size': 32, 'AVXalign': False, 'NT': False, 'congruent': 10, 'same': False}}
{'32': 9041}

*/
