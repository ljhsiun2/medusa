.global s_prepare_buffers
s_prepare_buffers:
push %r10
push %r11
push %rbp
push %rcx
push %rdi
push %rsi
lea addresses_D_ht+0x1cc7f, %rsi
lea addresses_UC_ht+0x1c87f, %rdi
nop
nop
cmp $64734, %r11
mov $39, %rcx
rep movsw
nop
nop
nop
cmp %rbp, %rbp
lea addresses_WC_ht+0xe07f, %rsi
lea addresses_WC_ht+0x567f, %rdi
nop
nop
nop
nop
sub %r10, %r10
mov $30, %rcx
rep movsq
nop
nop
nop
sub %r11, %r11
lea addresses_UC_ht+0x145ff, %rcx
nop
sub %rsi, %rsi
movb (%rcx), %r11b
nop
nop
nop
nop
nop
and $273, %rcx
pop %rsi
pop %rdi
pop %rcx
pop %rbp
pop %r11
pop %r10
ret

    .global s_faulty_load
s_faulty_load:
push %r10
push %r14
push %rax
push %rbp
push %rcx
push %rdi

// Faulty Load
lea addresses_RW+0x1b87f, %rax
nop
sub $65101, %rcx
vmovups (%rax), %ymm0
vextracti128 $0, %ymm0, %xmm0
vpextrq $1, %xmm0, %r10
lea oracles, %rcx
and $0xff, %r10
shlq $12, %r10
mov (%rcx,%r10,1), %r10
pop %rdi
pop %rcx
pop %rbp
pop %rax
pop %r14
pop %r10
ret

/*
<gen_faulty_load>
[REF]
{'src': {'NT': False, 'AVXalign': False, 'size': 1, 'congruent': 0, 'same': True, 'type': 'addresses_RW'}, 'OP': 'LOAD'}
[Faulty Load]
{'src': {'NT': False, 'AVXalign': False, 'size': 32, 'congruent': 0, 'same': True, 'type': 'addresses_RW'}, 'OP': 'LOAD'}
<gen_prepare_buffer>
{'src': {'congruent': 10, 'same': False, 'type': 'addresses_D_ht'}, 'dst': {'congruent': 11, 'same': False, 'type': 'addresses_UC_ht'}, 'OP': 'REPM'}
{'src': {'congruent': 11, 'same': False, 'type': 'addresses_WC_ht'}, 'dst': {'congruent': 7, 'same': False, 'type': 'addresses_WC_ht'}, 'OP': 'REPM'}
{'src': {'NT': False, 'AVXalign': False, 'size': 1, 'congruent': 6, 'same': False, 'type': 'addresses_UC_ht'}, 'OP': 'LOAD'}
{'32': 21829}

*/
